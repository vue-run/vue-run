(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{277:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"高阶组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件"}},[s._v("#")]),s._v(" 高阶组件")]),s._v(" "),a("p",[s._v("高阶组件可以看做是函数式编程中的组合。可以把高阶组件看做是一个函数，他接收一个组件作为参数，并返回一个功能增强的组件。")]),s._v(" "),a("p",[s._v("高阶组件是一个接替"),a("code",[s._v("Mixin")]),s._v("实现抽象组件公共功能的方法，不会因为组件的使用而污染DOM（添加并不想要的"),a("code",[s._v("div")]),s._v("标签等）、可以包裹任意的单一子元素等等")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("React")]),s._v("中高阶组件是比较常用的组件封装形式，在Vue中如何实现高阶组件呢？")]),s._v(" "),a("p",[s._v("在组件的"),a("code",[s._v("render")]),s._v("函数中，只需要返回一个"),a("code",[s._v("vNode")]),s._v("数据类型即可，如果在"),a("code",[s._v("render")]),s._v("函数中提前做一些处理，并返回"),a("code",[s._v("this.$slots.default[0]对应的vnode")]),s._v("，就可以实现高阶组件。")]),s._v(" "),a("p",[s._v("Vue内置了一个高阶组件"),a("code",[s._v("keep-alive")]),s._v("，查看"),a("a",{attrs:{href:"https://github.com/vuejs/vue/blob/dev/src/core/components/keep-alive.js",target:"_blank",rel:"noopener noreferrer"}},[s._v("源码"),a("OutboundLink")],1),s._v("可以发现其实现原理，就是通过维护一个"),a("code",[s._v("cache")]),s._v("，并在"),a("code",[s._v("render")]),s._v("函数中根据"),a("code",[s._v("key")]),s._v("返回缓存的"),a("code",[s._v("vnode")]),s._v("，来实现组件的持久化。")]),s._v(" "),a("p",[s._v("当我们写组件的时候，通常我们都需要从父组件传递一系列的"),a("code",[s._v("props")]),s._v("到子组件，同时父组件监听子组件"),a("code",[s._v("emit")]),s._v("过来的一系列事件。举例子：")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v('\n  <BaseInput\n      :value="value"\n      label="密码"\n      placeholder="请填写密码"\n      @input="handleInput"\n      @focus="handleFocus\n  />\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[s._v("//子组件\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("label")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v('\n    <input\n      :value="value"\n      :placeholder="placeholder"\n      @focus=$emit(\'focus\', $event)"\n      @input="$emit(\'input\', $event.target.value)"\n    />\n  '),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("label")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("有下面几个优化点：")]),s._v(" "),a("p",[s._v("1.每一个从父组件传到子组件的"),a("code",[s._v("props")]),s._v(",我们都得在子组件的"),a("code",[s._v("props")]),s._v("中显式的声明才能使用。这样一来，我们的子组件每次都需要申明一大堆"),a("code",[s._v("props")]),s._v(", 而类似"),a("code",[s._v("placeholer")]),s._v("这种dom原生的"),a("code",[s._v("property")]),s._v("我们其实完全可以直接从父传到子，无需声明。方法如下：")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("input")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v(":value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("v-bind")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("$attrs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("@input")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("$emit('input', $event.target.value)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("$attrs")]),s._v("包含了父作用域中不作为 "),a("code",[s._v("prop")]),s._v(" 被识别 (且获取) 的特性绑定 ("),a("code",[s._v("class")]),s._v(" 和 "),a("code",[s._v("style")]),s._v(" 除外)。当一个组件没有声明任何 prop 时，这里会包含所有父作用域的绑定，并且可以通过 "),a("code",[s._v("v-bind=”$attrs”")]),s._v("传入内部组件——在创建更高层次的组件时非常有用。")]),s._v(" "),a("p",[s._v("2.注意到子组件的"),a("code",[s._v("@focus=$emit('focus', $event)\"")]),s._v("其实什么都没做，只是把"),a("code",[s._v("event")]),s._v("传回给父组件而已，那其实和上面类似，我完全没必要显式地申明：")]),s._v(" "),a("div",{staticClass:"language-vue line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("input")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v(":value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("v-bind")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("$attrs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("v-on")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("listeners"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("computed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("listeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("this"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("$listeners"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("input")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("event")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[a("code",[s._v("$listeners")]),s._v("包含了父作用域中的 (不含 "),a("code",[s._v(".native")]),s._v(" 修饰器的) "),a("code",[s._v("v-on")]),s._v(" 事件监听器。它可以通过 "),a("code",[s._v("v-on=”$listeners”")]),s._v(" 传入内部组件——在创建更高层次的组件时非常有用。")]),s._v(" "),a("p",[s._v("3.需要注意的是，由于我们"),a("code",[s._v("input")]),s._v("并不是"),a("code",[s._v("BaseInput")]),s._v("这个组件的根节点，而默认情况下父作用域的不被认作"),a("code",[s._v("props")]),s._v(" 的特性绑定将会“回退”且作为普通的 HTML 特性应用在子组件的根元素上。所以我们需要设置"),a("code",[s._v("inheritAttrs:false")]),s._v("，这些默认行为将会被去掉, 以上两点的优化才能成功。")])])}),[],!1,null,null,null);t.default=e.exports}}]);