(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{254:function(a,t,r){a.exports=r.p+"assets/img/j17.239ea5b8.jpg"},333:function(a,t,r){"use strict";r.r(t);var s=r(30),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-函数式编程指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-函数式编程指南"}},[a._v("#")]),a._v(" JavaScript 函数式编程指南")]),a._v(" "),s("p",[s("img",{attrs:{src:r(254),alt:"JavaScript函数式编程指南"}})]),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#第-1-章-走进函数式"}},[a._v("第 1 章 走进函数式")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1-1-函数式编程有用吗？"}},[a._v("1.1 函数式编程有用吗？")])]),s("li",[s("a",{attrs:{href:"#_1-2-什么是函数式编程？"}},[a._v("1.2 什么是函数式编程？")])]),s("li",[s("a",{attrs:{href:"#_1-3-函数式编程的优点"}},[a._v("1.3 函数式编程的优点")])]),s("li",[s("a",{attrs:{href:"#_1-4-总结"}},[a._v("1.4 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-2-章-高阶-javascript"}},[a._v("第 2 章 高阶 JavaScript")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-1-为什么要使用-javascript？"}},[a._v("2.1 为什么要使用 JavaScript？")])]),s("li",[s("a",{attrs:{href:"#_2-2-函数式与面向对象的程序设计"}},[a._v("2.2 函数式与面向对象的程序设计")])]),s("li",[s("a",{attrs:{href:"#_2-3-函数"}},[a._v("2.3 函数")])]),s("li",[s("a",{attrs:{href:"#_2-4-闭包和作用域"}},[a._v("2.4 闭包和作用域")])]),s("li",[s("a",{attrs:{href:"#_2-5-总结"}},[a._v("2.5 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-3-章-轻数据结构、重操作"}},[a._v("第 3 章 轻数据结构、重操作")]),s("ul",[s("li",[s("a",{attrs:{href:"#_3-1-理解程序的控制流"}},[a._v("3.1 理解程序的控制流")])]),s("li",[s("a",{attrs:{href:"#_3-2-链接方法"}},[a._v("3.2 链接方法")])]),s("li",[s("a",{attrs:{href:"#_3-3-函数链"}},[a._v("3.3 函数链")])]),s("li",[s("a",{attrs:{href:"#_3-4-代码推理"}},[a._v("3.4 代码推理")])]),s("li",[s("a",{attrs:{href:"#_3-5-学会递归地思考"}},[a._v("3.5 学会递归地思考")])]),s("li",[s("a",{attrs:{href:"#_3-6-总结"}},[a._v("3.6 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-4-章-模块化且可重用的代码"}},[a._v("第 4 章 模块化且可重用的代码")]),s("ul",[s("li",[s("a",{attrs:{href:"#_4-1-方法链与函数管道的比较"}},[a._v("4.1 方法链与函数管道的比较")])]),s("li",[s("a",{attrs:{href:"#_4-2-管道函数的兼容条件"}},[a._v("4.2 管道函数的兼容条件")])]),s("li",[s("a",{attrs:{href:"#_4-3-柯里化的函数求值"}},[a._v("4.3 柯里化的函数求值")])]),s("li",[s("a",{attrs:{href:"#_4-4-部分应用和函数绑定"}},[a._v("4.4 部分应用和函数绑定")])]),s("li",[s("a",{attrs:{href:"#_4-5-组合函数管道"}},[a._v("4.5 组合函数管道")])]),s("li",[s("a",{attrs:{href:"#_4-6-使用函数组合子来管理程序的控制流"}},[a._v("4.6 使用函数组合子来管理程序的控制流")])]),s("li",[s("a",{attrs:{href:"#_4-7-总结"}},[a._v("4.7 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-5-章-针对复杂应用的设计模式"}},[a._v("第 5 章 针对复杂应用的设计模式")]),s("ul",[s("li",[s("a",{attrs:{href:"#_5-1-命令错误处理的不足"}},[a._v("5.1 命令错误处理的不足")])]),s("li",[s("a",{attrs:{href:"#_5-2-一种更好的解决方案-functor"}},[a._v("5.2 一种更好的解决方案——Functor")])]),s("li",[s("a",{attrs:{href:"#_5-3-使用-monad-函数式地处理错误"}},[a._v("5.3 使用 Monad 函数式地处理错误")])]),s("li",[s("a",{attrs:{href:"#_5-4-monadic-链式调用及组合"}},[a._v("5.4 Monadic 链式调用及组合")])]),s("li",[s("a",{attrs:{href:"#_5-5-总结"}},[a._v("5.5 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-6-章-坚不可摧的代码"}},[a._v("第 6 章 坚不可摧的代码")]),s("ul",[s("li",[s("a",{attrs:{href:"#_6-1-函数式编程对单元测试的影响"}},[a._v("6.1 函数式编程对单元测试的影响")])]),s("li",[s("a",{attrs:{href:"#_6-2-测试命令式代码的困难"}},[a._v("6.2 测试命令式代码的困难")])]),s("li",[s("a",{attrs:{href:"#_6-3-测试函数式代码"}},[a._v("6.3 测试函数式代码")])]),s("li",[s("a",{attrs:{href:"#_6-4-通过属性测试制定规格说明"}},[a._v("6.4 通过属性测试制定规格说明")])]),s("li",[s("a",{attrs:{href:"#_6-5-通过代码覆盖率衡量有效性"}},[a._v("6.5 通过代码覆盖率衡量有效性")])]),s("li",[s("a",{attrs:{href:"#_6-6-总结"}},[a._v("6.6 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-7-章-函数式优化"}},[a._v("第 7 章 函数式优化")]),s("ul",[s("li",[s("a",{attrs:{href:"#_7-1-函数执行机制"}},[a._v("7.1 函数执行机制")])]),s("li",[s("a",{attrs:{href:"#_7-2-使用惰性求值推迟"}},[a._v("7.2 使用惰性求值推迟")])]),s("li",[s("a",{attrs:{href:"#_7-3-实现需要时调用的策略"}},[a._v("7.3 实现需要时调用的策略")])]),s("li",[s("a",{attrs:{href:"#_7-4-递归和尾递归优化"}},[a._v("7.4 递归和尾递归优化")])]),s("li",[s("a",{attrs:{href:"#_7-5-总结"}},[a._v("7.5 总结")])])])]),s("li",[s("a",{attrs:{href:"#第-8-章-管理异步事件以及数据"}},[a._v("第 8 章 管理异步事件以及数据")]),s("ul",[s("li",[s("a",{attrs:{href:"#_8-1-异步代码的挑战"}},[a._v("8.1 异步代码的挑战")])]),s("li",[s("a",{attrs:{href:"#_8-2-一等公民-promise"}},[a._v("8.2 一等公民 Promise")])]),s("li",[s("a",{attrs:{href:"#_8-3-生成惰性数据"}},[a._v("8.3 生成惰性数据")])]),s("li",[s("a",{attrs:{href:"#_8-4-使用-rxjs-进行函数式和响应式编程"}},[a._v("8.4 使用 RxJS 进行函数式和响应式编程")])]),s("li",[s("a",{attrs:{href:"#_8-5-总结"}},[a._v("8.5 总结")])])])]),s("li",[s("a",{attrs:{href:"#附录：本书中使用的-javascript-库"}},[a._v("附录：本书中使用的 JavaScript 库")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"第-1-章-走进函数式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-1-章-走进函数式"}},[a._v("#")]),a._v(" 第 1 章 走进函数式")]),a._v(" "),s("h3",{attrs:{id:"_1-1-函数式编程有用吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-函数式编程有用吗？"}},[a._v("#")]),a._v(" 1.1 函数式编程有用吗？")]),a._v(" "),s("h3",{attrs:{id:"_1-2-什么是函数式编程？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是函数式编程？"}},[a._v("#")]),a._v(" 1.2 什么是函数式编程？")]),a._v(" "),s("h3",{attrs:{id:"_1-3-函数式编程的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-函数式编程的优点"}},[a._v("#")]),a._v(" 1.3 函数式编程的优点")]),a._v(" "),s("h3",{attrs:{id:"_1-4-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-总结"}},[a._v("#")]),a._v(" 1.4 总结")]),a._v(" "),s("h2",{attrs:{id:"第-2-章-高阶-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-2-章-高阶-javascript"}},[a._v("#")]),a._v(" 第 2 章 高阶 JavaScript")]),a._v(" "),s("h3",{attrs:{id:"_2-1-为什么要使用-javascript？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-为什么要使用-javascript？"}},[a._v("#")]),a._v(" 2.1 为什么要使用 JavaScript？")]),a._v(" "),s("h3",{attrs:{id:"_2-2-函数式与面向对象的程序设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-函数式与面向对象的程序设计"}},[a._v("#")]),a._v(" 2.2 函数式与面向对象的程序设计")]),a._v(" "),s("h3",{attrs:{id:"_2-3-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-函数"}},[a._v("#")]),a._v(" 2.3 函数")]),a._v(" "),s("h3",{attrs:{id:"_2-4-闭包和作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-闭包和作用域"}},[a._v("#")]),a._v(" 2.4 闭包和作用域")]),a._v(" "),s("h3",{attrs:{id:"_2-5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-总结"}},[a._v("#")]),a._v(" 2.5 总结")]),a._v(" "),s("h2",{attrs:{id:"第-3-章-轻数据结构、重操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-3-章-轻数据结构、重操作"}},[a._v("#")]),a._v(" 第 3 章 轻数据结构、重操作")]),a._v(" "),s("h3",{attrs:{id:"_3-1-理解程序的控制流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-理解程序的控制流"}},[a._v("#")]),a._v(" 3.1 理解程序的控制流")]),a._v(" "),s("h3",{attrs:{id:"_3-2-链接方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-链接方法"}},[a._v("#")]),a._v(" 3.2 链接方法")]),a._v(" "),s("h3",{attrs:{id:"_3-3-函数链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-函数链"}},[a._v("#")]),a._v(" 3.3 函数链")]),a._v(" "),s("h3",{attrs:{id:"_3-4-代码推理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-代码推理"}},[a._v("#")]),a._v(" 3.4 代码推理")]),a._v(" "),s("h3",{attrs:{id:"_3-5-学会递归地思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-学会递归地思考"}},[a._v("#")]),a._v(" 3.5 学会递归地思考")]),a._v(" "),s("h3",{attrs:{id:"_3-6-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-总结"}},[a._v("#")]),a._v(" 3.6 总结")]),a._v(" "),s("h2",{attrs:{id:"第-4-章-模块化且可重用的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-4-章-模块化且可重用的代码"}},[a._v("#")]),a._v(" 第 4 章 模块化且可重用的代码")]),a._v(" "),s("h3",{attrs:{id:"_4-1-方法链与函数管道的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-方法链与函数管道的比较"}},[a._v("#")]),a._v(" 4.1 方法链与函数管道的比较")]),a._v(" "),s("h3",{attrs:{id:"_4-2-管道函数的兼容条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-管道函数的兼容条件"}},[a._v("#")]),a._v(" 4.2 管道函数的兼容条件")]),a._v(" "),s("h3",{attrs:{id:"_4-3-柯里化的函数求值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-柯里化的函数求值"}},[a._v("#")]),a._v(" 4.3 柯里化的函数求值")]),a._v(" "),s("h3",{attrs:{id:"_4-4-部分应用和函数绑定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-部分应用和函数绑定"}},[a._v("#")]),a._v(" 4.4 部分应用和函数绑定")]),a._v(" "),s("h3",{attrs:{id:"_4-5-组合函数管道"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-组合函数管道"}},[a._v("#")]),a._v(" 4.5 组合函数管道")]),a._v(" "),s("h3",{attrs:{id:"_4-6-使用函数组合子来管理程序的控制流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-使用函数组合子来管理程序的控制流"}},[a._v("#")]),a._v(" 4.6 使用函数组合子来管理程序的控制流")]),a._v(" "),s("h3",{attrs:{id:"_4-7-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-总结"}},[a._v("#")]),a._v(" 4.7 总结")]),a._v(" "),s("h2",{attrs:{id:"第-5-章-针对复杂应用的设计模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-5-章-针对复杂应用的设计模式"}},[a._v("#")]),a._v(" 第 5 章 针对复杂应用的设计模式")]),a._v(" "),s("h3",{attrs:{id:"_5-1-命令错误处理的不足"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-命令错误处理的不足"}},[a._v("#")]),a._v(" 5.1 命令错误处理的不足")]),a._v(" "),s("h3",{attrs:{id:"_5-2-一种更好的解决方案-functor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-一种更好的解决方案-functor"}},[a._v("#")]),a._v(" 5.2 一种更好的解决方案——Functor")]),a._v(" "),s("h3",{attrs:{id:"_5-3-使用-monad-函数式地处理错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-使用-monad-函数式地处理错误"}},[a._v("#")]),a._v(" 5.3 使用 Monad 函数式地处理错误")]),a._v(" "),s("h3",{attrs:{id:"_5-4-monadic-链式调用及组合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-monadic-链式调用及组合"}},[a._v("#")]),a._v(" 5.4 Monadic 链式调用及组合")]),a._v(" "),s("h3",{attrs:{id:"_5-5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-总结"}},[a._v("#")]),a._v(" 5.5 总结")]),a._v(" "),s("h2",{attrs:{id:"第-6-章-坚不可摧的代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-6-章-坚不可摧的代码"}},[a._v("#")]),a._v(" 第 6 章 坚不可摧的代码")]),a._v(" "),s("h3",{attrs:{id:"_6-1-函数式编程对单元测试的影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-函数式编程对单元测试的影响"}},[a._v("#")]),a._v(" 6.1 函数式编程对单元测试的影响")]),a._v(" "),s("h3",{attrs:{id:"_6-2-测试命令式代码的困难"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-测试命令式代码的困难"}},[a._v("#")]),a._v(" 6.2 测试命令式代码的困难")]),a._v(" "),s("h3",{attrs:{id:"_6-3-测试函数式代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-测试函数式代码"}},[a._v("#")]),a._v(" 6.3 测试函数式代码")]),a._v(" "),s("h3",{attrs:{id:"_6-4-通过属性测试制定规格说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-通过属性测试制定规格说明"}},[a._v("#")]),a._v(" 6.4 通过属性测试制定规格说明")]),a._v(" "),s("h3",{attrs:{id:"_6-5-通过代码覆盖率衡量有效性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-通过代码覆盖率衡量有效性"}},[a._v("#")]),a._v(" 6.5 通过代码覆盖率衡量有效性")]),a._v(" "),s("h3",{attrs:{id:"_6-6-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-总结"}},[a._v("#")]),a._v(" 6.6 总结")]),a._v(" "),s("h2",{attrs:{id:"第-7-章-函数式优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-7-章-函数式优化"}},[a._v("#")]),a._v(" 第 7 章 函数式优化")]),a._v(" "),s("h3",{attrs:{id:"_7-1-函数执行机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-函数执行机制"}},[a._v("#")]),a._v(" 7.1 函数执行机制")]),a._v(" "),s("h3",{attrs:{id:"_7-2-使用惰性求值推迟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-使用惰性求值推迟"}},[a._v("#")]),a._v(" 7.2 使用惰性求值推迟")]),a._v(" "),s("h3",{attrs:{id:"_7-3-实现需要时调用的策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-实现需要时调用的策略"}},[a._v("#")]),a._v(" 7.3 实现需要时调用的策略")]),a._v(" "),s("h3",{attrs:{id:"_7-4-递归和尾递归优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-递归和尾递归优化"}},[a._v("#")]),a._v(" 7.4 递归和尾递归优化")]),a._v(" "),s("h3",{attrs:{id:"_7-5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-总结"}},[a._v("#")]),a._v(" 7.5 总结")]),a._v(" "),s("h2",{attrs:{id:"第-8-章-管理异步事件以及数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第-8-章-管理异步事件以及数据"}},[a._v("#")]),a._v(" 第 8 章 管理异步事件以及数据")]),a._v(" "),s("h3",{attrs:{id:"_8-1-异步代码的挑战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-异步代码的挑战"}},[a._v("#")]),a._v(" 8.1 异步代码的挑战")]),a._v(" "),s("h3",{attrs:{id:"_8-2-一等公民-promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-一等公民-promise"}},[a._v("#")]),a._v(" 8.2 一等公民 "),s("code",[a._v("Promise")])]),a._v(" "),s("h3",{attrs:{id:"_8-3-生成惰性数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-生成惰性数据"}},[a._v("#")]),a._v(" 8.3 生成惰性数据")]),a._v(" "),s("h3",{attrs:{id:"_8-4-使用-rxjs-进行函数式和响应式编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-使用-rxjs-进行函数式和响应式编程"}},[a._v("#")]),a._v(" 8.4 使用 RxJS 进行函数式和响应式编程")]),a._v(" "),s("h3",{attrs:{id:"_8-5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-总结"}},[a._v("#")]),a._v(" 8.5 总结")]),a._v(" "),s("h2",{attrs:{id:"附录：本书中使用的-javascript-库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录：本书中使用的-javascript-库"}},[a._v("#")]),a._v(" 附录：本书中使用的 JavaScript 库")])])}),[],!1,null,null,null);t.default=_.exports}}]);