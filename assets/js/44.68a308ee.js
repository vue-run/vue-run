(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{309:function(a,s,t){a.exports=t.p+"assets/img/webpack.c3ea52ec.png"},381:function(a,s,t){"use strict";t.r(s);var e=t(30),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" Webpack")]),a._v(" "),e("p",[e("img",{attrs:{src:t(309),alt:"Webpack"}})]),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#实现原理"}},[a._v("实现原理")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-webpack-原理"}},[a._v("1. webpack 原理")])]),e("li",[e("a",{attrs:{href:"#_2-tree-shaking-的原理"}},[a._v("2. tree-shaking 的原理")])]),e("li",[e("a",{attrs:{href:"#_3-压缩、合并、打包实现的原理"}},[a._v("3. 压缩、合并、打包实现的原理")])])])]),e("li",[e("a",{attrs:{href:"#构建和生命周期"}},[a._v("构建和生命周期")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-介绍下-webpack-的整个生命周期"}},[a._v("1. 介绍下 Webpack 的整个生命周期")])]),e("li",[e("a",{attrs:{href:"#_2-webpack-的构建流程"}},[a._v("2. webpack 的构建流程")])]),e("li",[e("a",{attrs:{href:"#_3-webpack-如何做异步加载"}},[a._v("3. webpack 如何做异步加载")])])])]),e("li",[e("a",{attrs:{href:"#横向对比"}},[a._v("横向对比")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-css-loader-和-style-loader-的对比"}},[a._v("1.css-loader 和 style-loader 的对比")])]),e("li",[e("a",{attrs:{href:"#_2-webpack-与-gulp-的区别"}},[a._v("2. webpack 与 gulp 的区别")])]),e("li",[e("a",{attrs:{href:"#_3-cjs和esm在-打包过程中的区别"}},[a._v("3. cjs和esm在 打包过程中的区别")])]),e("li",[e("a",{attrs:{href:"#_4-webpack-的-loader-和-plugin-的对比"}},[a._v("4. webpack 的 loader 和 plugin 的对比")])])])]),e("li",[e("a",{attrs:{href:"#编译-开发环境"}},[a._v("编译<开发环境>")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-webpack-怎么处理内联-css-的"}},[a._v("1. webpack 怎么处理内联 css 的")])]),e("li",[e("a",{attrs:{href:"#_2-dev-server-是怎么跑起来的"}},[a._v("2. dev-server 是怎么跑起来的")])]),e("li",[e("a",{attrs:{href:"#_3-webpack-热更新的原理"}},[a._v("3. webpack 热更新的原理")])]),e("li",[e("a",{attrs:{href:"#_4-热更新的优化方式"}},[a._v("4. 热更新的优化方式")])]),e("li",[e("a",{attrs:{href:"#_5-怎么配置开发环境的？"}},[a._v("5. 怎么配置开发环境的？")])])])]),e("li",[e("a",{attrs:{href:"#打包-生产-测试环境"}},[a._v("打包<生产/测试环境>")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-webpack的分包策略"}},[a._v("1. webpack的分包策略")])]),e("li",[e("a",{attrs:{href:"#_2-webpack-怎么配置抽取公共文件"}},[a._v("2. webpack 怎么配置抽取公共文件")])]),e("li",[e("a",{attrs:{href:"#_3-如何配置把-js、css、html-单独打包成一个文件"}},[a._v("3.如何配置把 js、css、html 单独打包成一个文件")])]),e("li",[e("a",{attrs:{href:"#_4-如何实现分模块打包（多入口）"}},[a._v("4. 如何实现分模块打包（多入口）")])]),e("li",[e("a",{attrs:{href:"#_5-如何优化包体积？"}},[a._v("5. 如何优化包体积？")])]),e("li",[e("a",{attrs:{href:"#_6-hash-码是怎么生成的？如何避免hash重复的情况？"}},[a._v("6. hash 码是怎么生成的？如何避免hash重复的情况？")])]),e("li",[e("a",{attrs:{href:"#_7-使用-import-时，node-modules-里的依赖会做什么"}},[a._v("7. 使用 import 时，node_modules 里的依赖会做什么")])]),e("li",[e("a",{attrs:{href:"#_9-多个活动页，如何实现单独打包指定个活动？"}},[a._v("9. 多个活动页，如何实现单独打包指定个活动？")])]),e("li",[e("a",{attrs:{href:"#_10-webpack一般怎么组织-css"}},[a._v("10.  webpack一般怎么组织 CSS")])]),e("li",[e("a",{attrs:{href:"#_11-如何利用localstorage持久化缓存"}},[a._v("11.  如何利用localstorage持久化缓存")])])])]),e("li",[e("a",{attrs:{href:"#plugin"}},[a._v("Plugin")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-plugin的实现原理"}},[a._v("1. plugin的实现原理")])]),e("li",[e("a",{attrs:{href:"#_2-用过哪些常用plugin，解决什么问题"}},[a._v("2. 用过哪些常用plugin，解决什么问题")])])])]),e("li",[e("a",{attrs:{href:"#loader"}},[a._v("Loader")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-loader的原理"}},[a._v("1. loader的原理")])]),e("li",[e("a",{attrs:{href:"#_2-用过哪些常用loader，解决什么问题"}},[a._v("2. 用过哪些常用loader，解决什么问题")])]),e("li",[e("a",{attrs:{href:"#_3-css-loader-和-style-loader-的区别"}},[a._v("3. css-loader 和 style-loader 的区别")])]),e("li",[e("a",{attrs:{href:"#_4-file-loader-和-url-loader-的区别"}},[a._v("4. file-loader 和 url-loader 的区别")])]),e("li",[e("a",{attrs:{href:"#_5-如何配-sass，需要配哪些-loader"}},[a._v("5. 如何配 sass，需要配哪些 loader")])])])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[a._v("#")]),a._v(" 实现原理")]),a._v(" "),e("h3",{attrs:{id:"_1-webpack-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-原理"}},[a._v("#")]),a._v(" 1. webpack 原理")]),a._v(" "),e("h3",{attrs:{id:"_2-tree-shaking-的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-tree-shaking-的原理"}},[a._v("#")]),a._v(" 2. tree-shaking 的原理")]),a._v(" "),e("h3",{attrs:{id:"_3-压缩、合并、打包实现的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-压缩、合并、打包实现的原理"}},[a._v("#")]),a._v(" 3. 压缩、合并、打包实现的原理")]),a._v(" "),e("h2",{attrs:{id:"构建和生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建和生命周期"}},[a._v("#")]),a._v(" 构建和生命周期")]),a._v(" "),e("h3",{attrs:{id:"_1-介绍下-webpack-的整个生命周期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍下-webpack-的整个生命周期"}},[a._v("#")]),a._v(" 1. 介绍下 Webpack 的整个生命周期")]),a._v(" "),e("h3",{attrs:{id:"_2-webpack-的构建流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-的构建流程"}},[a._v("#")]),a._v(" 2. webpack 的构建流程")]),a._v(" "),e("h3",{attrs:{id:"_3-webpack-如何做异步加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack-如何做异步加载"}},[a._v("#")]),a._v(" 3. webpack 如何做异步加载")]),a._v(" "),e("h2",{attrs:{id:"横向对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#横向对比"}},[a._v("#")]),a._v(" 横向对比")]),a._v(" "),e("h3",{attrs:{id:"_1-css-loader-和-style-loader-的对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-css-loader-和-style-loader-的对比"}},[a._v("#")]),a._v(" 1.css-loader 和 style-loader 的对比")]),a._v(" "),e("h3",{attrs:{id:"_2-webpack-与-gulp-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-与-gulp-的区别"}},[a._v("#")]),a._v(" 2. webpack 与 gulp 的区别")]),a._v(" "),e("h3",{attrs:{id:"_3-cjs和esm在-打包过程中的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-cjs和esm在-打包过程中的区别"}},[a._v("#")]),a._v(" 3. cjs和esm在 打包过程中的区别")]),a._v(" "),e("h3",{attrs:{id:"_4-webpack-的-loader-和-plugin-的对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-webpack-的-loader-和-plugin-的对比"}},[a._v("#")]),a._v(" 4. webpack 的 loader 和 plugin 的对比")]),a._v(" "),e("h2",{attrs:{id:"编译-开发环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译-开发环境"}},[a._v("#")]),a._v(" 编译<开发环境>")]),a._v(" "),e("h3",{attrs:{id:"_1-webpack-怎么处理内联-css-的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-怎么处理内联-css-的"}},[a._v("#")]),a._v(" 1. webpack 怎么处理内联 css 的")]),a._v(" "),e("h3",{attrs:{id:"_2-dev-server-是怎么跑起来的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-dev-server-是怎么跑起来的"}},[a._v("#")]),a._v(" 2. dev-server 是怎么跑起来的")]),a._v(" "),e("h3",{attrs:{id:"_3-webpack-热更新的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack-热更新的原理"}},[a._v("#")]),a._v(" 3. webpack 热更新的原理")]),a._v(" "),e("h3",{attrs:{id:"_4-热更新的优化方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-热更新的优化方式"}},[a._v("#")]),a._v(" 4. 热更新的优化方式")]),a._v(" "),e("h3",{attrs:{id:"_5-怎么配置开发环境的？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-怎么配置开发环境的？"}},[a._v("#")]),a._v(" 5. 怎么配置开发环境的？")]),a._v(" "),e("h2",{attrs:{id:"打包-生产-测试环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包-生产-测试环境"}},[a._v("#")]),a._v(" 打包<生产/测试环境>")]),a._v(" "),e("h3",{attrs:{id:"_1-webpack的分包策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack的分包策略"}},[a._v("#")]),a._v(" 1. webpack的分包策略")]),a._v(" "),e("h3",{attrs:{id:"_2-webpack-怎么配置抽取公共文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-怎么配置抽取公共文件"}},[a._v("#")]),a._v(" 2. webpack 怎么配置抽取公共文件")]),a._v(" "),e("h3",{attrs:{id:"_3-如何配置把-js、css、html-单独打包成一个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何配置把-js、css、html-单独打包成一个文件"}},[a._v("#")]),a._v(" 3.如何配置把 js、css、html 单独打包成一个文件")]),a._v(" "),e("h3",{attrs:{id:"_4-如何实现分模块打包（多入口）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何实现分模块打包（多入口）"}},[a._v("#")]),a._v(" 4. 如何实现分模块打包（多入口）")]),a._v(" "),e("h3",{attrs:{id:"_5-如何优化包体积？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-如何优化包体积？"}},[a._v("#")]),a._v(" 5. 如何优化包体积？")]),a._v(" "),e("h3",{attrs:{id:"_6-hash-码是怎么生成的？如何避免hash重复的情况？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-hash-码是怎么生成的？如何避免hash重复的情况？"}},[a._v("#")]),a._v(" 6. hash 码是怎么生成的？如何避免hash重复的情况？")]),a._v(" "),e("h3",{attrs:{id:"_7-使用-import-时，node-modules-里的依赖会做什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-使用-import-时，node-modules-里的依赖会做什么"}},[a._v("#")]),a._v(" 7. 使用 import 时，node_modules 里的依赖会做什么")]),a._v(" "),e("h3",{attrs:{id:"_9-多个活动页，如何实现单独打包指定个活动？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-多个活动页，如何实现单独打包指定个活动？"}},[a._v("#")]),a._v(" 9. 多个活动页，如何实现单独打包指定个活动？")]),a._v(" "),e("h3",{attrs:{id:"_10-webpack一般怎么组织-css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-webpack一般怎么组织-css"}},[a._v("#")]),a._v(" 10.  webpack一般怎么组织 CSS")]),a._v(" "),e("h3",{attrs:{id:"_11-如何利用localstorage持久化缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-如何利用localstorage持久化缓存"}},[a._v("#")]),a._v(" 11.  如何利用localstorage持久化缓存")]),a._v(" "),e("h2",{attrs:{id:"plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[a._v("#")]),a._v(" Plugin")]),a._v(" "),e("h3",{attrs:{id:"_1-plugin的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-plugin的实现原理"}},[a._v("#")]),a._v(" 1. plugin的实现原理")]),a._v(" "),e("h3",{attrs:{id:"_2-用过哪些常用plugin，解决什么问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-用过哪些常用plugin，解决什么问题"}},[a._v("#")]),a._v(" 2. 用过哪些常用plugin，解决什么问题")]),a._v(" "),e("h4",{attrs:{id:"_1-terser-webpack-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-terser-webpack-plugin"}},[a._v("#")]),a._v(" 1. terser-webpack-plugin")]),a._v(" "),e("p",[a._v("压缩JS文件，另外还有类似功能的"),e("code",[a._v("webpack-parallel-uglify-plugin")]),a._v("、"),e("code",[a._v("uglifyjs-webpack-plugin")]),a._v(" "),e("code",[a._v("js optimization: { minimizer: [ new TerserPlugin({ parallel: true, cache: true }) ] }")])]),a._v(" "),e("h4",{attrs:{id:"_2-thread-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-thread-loader"}},[a._v("#")]),a._v(" 2. thread-loader")]),a._v(" "),e("p",[e("strong",[a._v("开启并行构建")]),a._v("。由于happypack的作者说自己的兴趣已经不再js上了，所以已经没有维护了，并推荐使用的是webpack4.x+并且使用thread-loader。")]),a._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   test"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/\\.js$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n   use"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n       loader"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"thread-loader"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n       options"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" threadLoaderOptions\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"babel-loader"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n   exclude"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/node_modules/")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br")])]),e("h4",{attrs:{id:"_3-dllplugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-dllplugin"}},[a._v("#")]),a._v(" 3. DllPlugin")]),a._v(" "),e("p",[a._v("上面说的几个并行插件理论上是可以增加构建速度，网上很多文章都是这么说的，但是我在实际的过程中使用，发现有时候不仅没提升反而还降低了打包速度，网速查阅给的理由是可能你的电脑核数本来就低，或者当时你CPU运行已经很高了，再去开启多进程导致构建速度降低。")]),a._v(" "),e("p",[a._v("上面说的几个并行插件可能在某些情况下达不到你想要的效果，然而在我们团队优化webpack性能经验来看，这次所说的两个插件是很明显并且每次都能提高打包速度的。原理就是先把第三方依赖先打包一次生成一个js文件，然后真正打包项目代码时候，会根据映射文件直接从打包出来的js文件获取所需要的对象，而不用再去打包第三方文件。只不过这种情况打包配置稍微麻烦点，需要写一个webpack.dll.js。大致如下：")]),a._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpack.dll.js")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'path'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" webpack "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'webpack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        library"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"moment"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    output"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name].dll.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'json-dll'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        library"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name]'")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("webpack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DllPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./json-dll/library.json'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name].json'")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br")])]),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpack.dev.js")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AddAssetHtmlWebpack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n     filepath"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./json-dll/library.dll.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("webpack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DllReferencePlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      manifest"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"./json-dll/library.json"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("h4",{attrs:{id:"_4-webpack-bundle-analyzer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-webpack-bundle-analyzer"}},[a._v("#")]),a._v(" 4. webpack-bundle-analyzer")]),a._v(" "),e("p",[a._v("这个插件可以用可视化帮我们分析打包体积，从而来采用合适的优化方式去改进我们的webpack配置。")]),a._v(" "),e("h4",{attrs:{id:"_5-speed-measure-webpack-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-speed-measure-webpack-plugin"}},[a._v("#")]),a._v(" 5. speed-measure-webpack-plugin")]),a._v(" "),e("p",[a._v("这个插件可以告诉我们打包时候每一个loader或者plugin花费了多少时间，从而对耗时比较长的plugin和loader做优化")]),a._v(" "),e("h4",{attrs:{id:"_6-friendly-errors-webpack-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-friendly-errors-webpack-plugin"}},[a._v("#")]),a._v(" 6. friendly-errors-webpack-plugin")]),a._v(" "),e("p",[a._v("这个插件可以帮我们优化打包日志，我们打包时候经常看到很长一个日志信息，有的时候是不需要的，也不会去看所以可以用这个插件来简化。")]),a._v(" "),e("h2",{attrs:{id:"loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[a._v("#")]),a._v(" Loader")]),a._v(" "),e("h3",{attrs:{id:"_1-loader的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-loader的原理"}},[a._v("#")]),a._v(" 1. loader的原理")]),a._v(" "),e("h3",{attrs:{id:"_2-用过哪些常用loader，解决什么问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-用过哪些常用loader，解决什么问题"}},[a._v("#")]),a._v(" 2. 用过哪些常用loader，解决什么问题")]),a._v(" "),e("h4",{attrs:{id:"_1-cache-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-cache-loader"}},[a._v("#")]),a._v(" 1. cache-loader")]),a._v(" "),e("p",[a._v("这个loader就是在第一次打包的时候会缓存打包的结果，在第二次打包的时候就会直接读取缓存的内容，从而提高打包效率。但是也需要合理利用，我们要记住一点你加的每一个loader，plugins都会带来额外的打包时间。这个额外时间比他带来的减少时间多，那么一味的增加这个loader就没意义，所以cache-loader最好用在耗时比较大的loader上，配置如下")]),a._v(" "),e("h3",{attrs:{id:"_3-css-loader-和-style-loader-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-css-loader-和-style-loader-的区别"}},[a._v("#")]),a._v(" 3. css-loader 和 style-loader 的区别")]),a._v(" "),e("h3",{attrs:{id:"_4-file-loader-和-url-loader-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-file-loader-和-url-loader-的区别"}},[a._v("#")]),a._v(" 4. file-loader 和 url-loader 的区别")]),a._v(" "),e("h3",{attrs:{id:"_5-如何配-sass，需要配哪些-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-如何配-sass，需要配哪些-loader"}},[a._v("#")]),a._v(" 5. 如何配 sass，需要配哪些 loader")])])}),[],!1,null,null,null);s.default=r.exports}}]);