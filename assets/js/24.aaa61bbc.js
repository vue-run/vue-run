(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{257:function(a,t,r){a.exports=r.p+"assets/img/j15.6a4d2d14.jpg"},336:function(a,t,r){"use strict";r.r(t);var _=r(30),s=Object(_.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"javascript-设计模式与开发实战"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript-设计模式与开发实战"}},[a._v("#")]),a._v(" JavaScript 设计模式与开发实战")]),a._v(" "),_("p",[_("img",{attrs:{src:r(257),alt:"JavaScript设计模式与开发实战"}})]),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#第1章-面向对象的javascript"}},[a._v("第1章 面向对象的JavaScript")]),_("ul",[_("li",[_("a",{attrs:{href:"#_1-1-动态类型语言和鸭子类型"}},[a._v("1.1 动态类型语言和鸭子类型")])]),_("li",[_("a",{attrs:{href:"#_1-2-多态"}},[a._v("1.2 多态")])]),_("li",[_("a",{attrs:{href:"#_1-3-封装"}},[a._v("1.3 封装")])]),_("li",[_("a",{attrs:{href:"#_1-4-原型模式和基于原型的javascript对象系统"}},[a._v("1.4 原型模式和基于原型的JavaScript对象系统")])])])]),_("li",[_("a",{attrs:{href:"#第2章-this、call和apply"}},[a._v("第2章 this、call和apply")]),_("ul",[_("li",[_("a",{attrs:{href:"#_2-1-this"}},[a._v("2.1 this")])]),_("li",[_("a",{attrs:{href:"#_2-2-call和apply"}},[a._v("2.2 call和apply")])])])]),_("li",[_("a",{attrs:{href:"#第3章-闭包和高阶函数"}},[a._v("第3章 闭包和高阶函数")]),_("ul",[_("li",[_("a",{attrs:{href:"#_3-1-闭包"}},[a._v("3.1 闭包")])]),_("li",[_("a",{attrs:{href:"#_3-2-高阶函数"}},[a._v("3.2 高阶函数")])]),_("li",[_("a",{attrs:{href:"#_3-3-小结"}},[a._v("3.3 小结")])])])]),_("li",[_("a",{attrs:{href:"#第4章-单例模式"}},[a._v("第4章 单例模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_4-1-实现单例模式"}},[a._v("4.1 实现单例模式")])]),_("li",[_("a",{attrs:{href:"#_4-2-透明的单例模式"}},[a._v("4.2 透明的单例模式")])]),_("li",[_("a",{attrs:{href:"#_4-3-用代理实现单例模式"}},[a._v("4.3 用代理实现单例模式")])]),_("li",[_("a",{attrs:{href:"#_4-4-javascript中的单例模式"}},[a._v("4.4 JavaScript中的单例模式")])]),_("li",[_("a",{attrs:{href:"#_4-5-惰性单例"}},[a._v("4.5 惰性单例")])]),_("li",[_("a",{attrs:{href:"#_4-6-通用的惰性单例"}},[a._v("4.6 通用的惰性单例")])]),_("li",[_("a",{attrs:{href:"#_4-7-小结"}},[a._v("4.7 小结")])])])]),_("li",[_("a",{attrs:{href:"#第5章-策略模式"}},[a._v("第5章 策略模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_5-1-使用策略模式计算奖金"}},[a._v("5.1 使用策略模式计算奖金")])]),_("li",[_("a",{attrs:{href:"#_5-2-javascript版本中的策略模式"}},[a._v("5.2 JavaScript版本中的策略模式")])]),_("li",[_("a",{attrs:{href:"#_5-3-多态在策略模式中的体现"}},[a._v("5.3 多态在策略模式中的体现")])]),_("li",[_("a",{attrs:{href:"#_5-4-使用策略模式实现缓动动画"}},[a._v("5.4 使用策略模式实现缓动动画")])]),_("li",[_("a",{attrs:{href:"#_5-5-更广义的-算法"}},[a._v("5.5 更广义的“算法”")])]),_("li",[_("a",{attrs:{href:"#_5-6-表单校验"}},[a._v("5.6 表单校验")])]),_("li",[_("a",{attrs:{href:"#_5-7-策略模式的优缺点"}},[a._v("5.7 策略模式的优缺点")])]),_("li",[_("a",{attrs:{href:"#_5-8-一等函数对象与策略模式"}},[a._v("5.8 一等函数对象与策略模式")])]),_("li",[_("a",{attrs:{href:"#_5-9-小结"}},[a._v("5.9 小结")])])])]),_("li",[_("a",{attrs:{href:"#第6章-代理模式"}},[a._v("第6章 代理模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_6-1-第一个例子-小明追mm"}},[a._v("6.1 第一个例子——小明追MM")])]),_("li",[_("a",{attrs:{href:"#_6-2-保护代理和虚拟代理"}},[a._v("6.2 保护代理和虚拟代理")])]),_("li",[_("a",{attrs:{href:"#_6-3-虚拟代理实现图片预加载"}},[a._v("6.3 虚拟代理实现图片预加载")])]),_("li",[_("a",{attrs:{href:"#_6-4-代理的意义"}},[a._v("6.4 代理的意义")])]),_("li",[_("a",{attrs:{href:"#_6-5-代理和本体接口的一致性"}},[a._v("6.5 代理和本体接口的一致性")])]),_("li",[_("a",{attrs:{href:"#_6-6-虚拟代理合并http请求"}},[a._v("6.6 虚拟代理合并HTTP请求")])]),_("li",[_("a",{attrs:{href:"#_6-7-虚拟代理在惰性加载中的应用"}},[a._v("6.7 虚拟代理在惰性加载中的应用")])]),_("li",[_("a",{attrs:{href:"#_6-8-缓存代理"}},[a._v("6.8 缓存代理")])]),_("li",[_("a",{attrs:{href:"#_6-9-用高阶函数动态创建代理"}},[a._v("6.9 用高阶函数动态创建代理")])]),_("li",[_("a",{attrs:{href:"#_6-10-其他代理模式"}},[a._v("6.10 其他代理模式")])]),_("li",[_("a",{attrs:{href:"#_6-11-小结"}},[a._v("6.11 小结")])])])]),_("li",[_("a",{attrs:{href:"#第7章-迭代器模式"}},[a._v("第7章 迭代器模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_7-1-jquery中的迭代器"}},[a._v("7.1 jQuery中的迭代器")])]),_("li",[_("a",{attrs:{href:"#_7-2-实现自己的迭代器"}},[a._v("7.2 实现自己的迭代器")])]),_("li",[_("a",{attrs:{href:"#_7-3-内部迭代器和外部迭代器"}},[a._v("7.3 内部迭代器和外部迭代器")])]),_("li",[_("a",{attrs:{href:"#_7-4-迭代类数组对象和字面量对象"}},[a._v("7.4 迭代类数组对象和字面量对象")])]),_("li",[_("a",{attrs:{href:"#_7-5-倒序迭代器"}},[a._v("7.5 倒序迭代器")])]),_("li",[_("a",{attrs:{href:"#_7-6-中止迭代器"}},[a._v("7.6 中止迭代器")])]),_("li",[_("a",{attrs:{href:"#_7-7-迭代器模式的应用举例"}},[a._v("7.7 迭代器模式的应用举例")])]),_("li",[_("a",{attrs:{href:"#_7-8-小结"}},[a._v("7.8 小结")])]),_("li",[_("a",{attrs:{href:"#_7-9-小结"}},[a._v("7.9 小结")])])])]),_("li",[_("a",{attrs:{href:"#第8章-发布-订阅模式"}},[a._v("第8章 发布——订阅模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_8-1-现实中的发布-订阅模式"}},[a._v("8.1 现实中的发布——订阅模式")])]),_("li",[_("a",{attrs:{href:"#_8-2-发布-订阅模式的作用"}},[a._v("8.2 发布——订阅模式的作用")])]),_("li",[_("a",{attrs:{href:"#_8-3-dom事件"}},[a._v("8.3 DOM事件")])]),_("li",[_("a",{attrs:{href:"#_8-4-自定义事件"}},[a._v("8.4 自定义事件")])]),_("li",[_("a",{attrs:{href:"#_8-5-发布-订阅模式的通知实现"}},[a._v("8.5 发布——订阅模式的通知实现")])]),_("li",[_("a",{attrs:{href:"#_8-6-取消订阅的事件"}},[a._v("8.6 取消订阅的事件")])]),_("li",[_("a",{attrs:{href:"#_8-7-真实的例子-网站登录"}},[a._v("8.7 真实的例子——网站登录")])]),_("li",[_("a",{attrs:{href:"#_8-8-全局的发布-订阅对象"}},[a._v("8.8 全局的发布——订阅对象")])]),_("li",[_("a",{attrs:{href:"#_8-9-模块间通信"}},[a._v("8.9 模块间通信")])]),_("li",[_("a",{attrs:{href:"#_8-10-必须先订阅再发布吗"}},[a._v("8.10 必须先订阅再发布吗")])]),_("li",[_("a",{attrs:{href:"#_8-11-全局事件的命名冲突"}},[a._v("8.11 全局事件的命名冲突")])]),_("li",[_("a",{attrs:{href:"#_8-12-javascript实现发布-订阅"}},[a._v("8.12 JavaScript实现发布——订阅")])]),_("li",[_("a",{attrs:{href:"#_8-13-小结"}},[a._v("8.13 小结")])])])]),_("li",[_("a",{attrs:{href:"#第9章-命令模式"}},[a._v("第9章 命令模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_9-1-命令模式的用途"}},[a._v("9.1 命令模式的用途")])]),_("li",[_("a",{attrs:{href:"#_9-2-命令模式的例子-菜单程序"}},[a._v("9.2 命令模式的例子——菜单程序")])]),_("li",[_("a",{attrs:{href:"#_9-3-javascript中的命令模式"}},[a._v("9.3 JavaScript中的命令模式")])]),_("li",[_("a",{attrs:{href:"#_9-4-撤销命令"}},[a._v("9.4 撤销命令")])]),_("li",[_("a",{attrs:{href:"#_9-5-撤销和重做"}},[a._v("9.5 撤销和重做")])]),_("li",[_("a",{attrs:{href:"#_9-6-命令队列"}},[a._v("9.6 命令队列")])]),_("li",[_("a",{attrs:{href:"#_9-7-宏命令"}},[a._v("9.7 宏命令")])]),_("li",[_("a",{attrs:{href:"#_9-8-智能命令与傻瓜命令"}},[a._v("9.8 智能命令与傻瓜命令")])]),_("li",[_("a",{attrs:{href:"#_9-9-小结"}},[a._v("9.9 小结")])])])]),_("li",[_("a",{attrs:{href:"#第10章-组合模式"}},[a._v("第10章 组合模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_10-1-回顾宏命令"}},[a._v("10.1 回顾宏命令")])]),_("li",[_("a",{attrs:{href:"#_10-2-组合模式的作用"}},[a._v("10.2 组合模式的作用")])]),_("li",[_("a",{attrs:{href:"#_10-3-请求在树中传递的过程"}},[a._v("10.3 请求在树中传递的过程")])]),_("li",[_("a",{attrs:{href:"#_10-4-更强大的宏命令"}},[a._v("10.4 更强大的宏命令")])]),_("li",[_("a",{attrs:{href:"#_10-5-抽象类在组合模式中的作用"}},[a._v("10.5 抽象类在组合模式中的作用")])]),_("li",[_("a",{attrs:{href:"#_10-6-透明性带来的安全问题"}},[a._v("10.6 透明性带来的安全问题")])]),_("li",[_("a",{attrs:{href:"#_10-7-组合模式的例子-扫描文件夹"}},[a._v("10.7 组合模式的例子——扫描文件夹")])]),_("li",[_("a",{attrs:{href:"#_10-8-一些值得注意的地方"}},[a._v("10.8 一些值得注意的地方")])]),_("li",[_("a",{attrs:{href:"#_10-9-引用父对象"}},[a._v("10.9 引用父对象")])]),_("li",[_("a",{attrs:{href:"#_10-10-何时使用组合模式"}},[a._v("10.10 何时使用组合模式")])]),_("li",[_("a",{attrs:{href:"#_10-11-小结"}},[a._v("10.11 小结")])])])]),_("li",[_("a",{attrs:{href:"#第11章-模版方法模式"}},[a._v("第11章 模版方法模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_11-1-模版方法模式的定义和组成"}},[a._v("11.1 模版方法模式的定义和组成")])]),_("li",[_("a",{attrs:{href:"#_11-2-第一个例子-coffe-or-tea"}},[a._v("11.2 第一个例子——Coffe or Tea")])]),_("li",[_("a",{attrs:{href:"#_11-3-抽象类"}},[a._v("11.3 抽象类")])]),_("li",[_("a",{attrs:{href:"#_11-4-模版方法模式的使用场景"}},[a._v("11.4 模版方法模式的使用场景")])]),_("li",[_("a",{attrs:{href:"#_11-5-钩子方法"}},[a._v("11.5 钩子方法")])]),_("li",[_("a",{attrs:{href:"#_11-6-好莱坞原则"}},[a._v("11.6 好莱坞原则")])]),_("li",[_("a",{attrs:{href:"#_11-7-真的需要-继承-吗"}},[a._v("11.7 真的需要“继承”吗")])]),_("li",[_("a",{attrs:{href:"#_11-8-小结"}},[a._v("11.8 小结")])])])]),_("li",[_("a",{attrs:{href:"#第12章-享元模式"}},[a._v("第12章 享元模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_12-1-初识享元模式"}},[a._v("12.1 初识享元模式")])]),_("li",[_("a",{attrs:{href:"#_12-2-内部状态和外部状态"}},[a._v("12.2 内部状态和外部状态")])]),_("li",[_("a",{attrs:{href:"#_12-3-享元模式的通用结构"}},[a._v("12.3 享元模式的通用结构")])]),_("li",[_("a",{attrs:{href:"#_12-4-文件上传的例子"}},[a._v("12.4 文件上传的例子")])]),_("li",[_("a",{attrs:{href:"#_12-5-享元模式的适用性"}},[a._v("12.5 享元模式的适用性")])]),_("li",[_("a",{attrs:{href:"#_12-6-再谈内部状态和外部状态"}},[a._v("12.6 再谈内部状态和外部状态")])]),_("li",[_("a",{attrs:{href:"#_12-7-对象池"}},[a._v("12.7 对象池")])]),_("li",[_("a",{attrs:{href:"#_12-8-小结"}},[a._v("12.8 小结")])])])]),_("li",[_("a",{attrs:{href:"#第13章-职责链模式"}},[a._v("第13章 职责链模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_13-1-现实中的职责链模式"}},[a._v("13.1 现实中的职责链模式")])]),_("li",[_("a",{attrs:{href:"#_13-2-实际开发中的职责链模式"}},[a._v("13.2 实际开发中的职责链模式")])]),_("li",[_("a",{attrs:{href:"#_13-3-用职责链模式重构代码"}},[a._v("13.3 用职责链模式重构代码")])]),_("li",[_("a",{attrs:{href:"#_13-4-灵活可拆分的职责链节点"}},[a._v("13.4 灵活可拆分的职责链节点")])]),_("li",[_("a",{attrs:{href:"#_13-5-异步的职责链"}},[a._v("13.5 异步的职责链")])]),_("li",[_("a",{attrs:{href:"#_13-6-职责链模式的优缺点"}},[a._v("13.6 职责链模式的优缺点")])]),_("li",[_("a",{attrs:{href:"#_13-7-用aop实现职责链"}},[a._v("13.7 用AOP实现职责链")])]),_("li",[_("a",{attrs:{href:"#_13-8-用职责链模式获取文件上传对象"}},[a._v("13.8 用职责链模式获取文件上传对象")])]),_("li",[_("a",{attrs:{href:"#_13-9-小结"}},[a._v("13.9 小结")])])])]),_("li",[_("a",{attrs:{href:"#第14章-中介者模式"}},[a._v("第14章 中介者模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_14-1-现实中的中介者"}},[a._v("14.1 现实中的中介者")])]),_("li",[_("a",{attrs:{href:"#_14-2-中介者模式的例子-泡泡堂游戏"}},[a._v("14.2 中介者模式的例子——泡泡堂游戏")])]),_("li",[_("a",{attrs:{href:"#_14-3-中介者模式的例子-购买商品"}},[a._v("14.3 中介者模式的例子——购买商品")])]),_("li",[_("a",{attrs:{href:"#_14-4-小结"}},[a._v("14.4 小结")])])])]),_("li",[_("a",{attrs:{href:"#第15章-装饰者模式"}},[a._v("第15章 装饰者模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_15-1-传统模拟免息对象语言的装饰者模式"}},[a._v("15.1 传统模拟免息对象语言的装饰者模式")])]),_("li",[_("a",{attrs:{href:"#_15-2-装饰者也是包装器"}},[a._v("15.2 装饰者也是包装器")])]),_("li",[_("a",{attrs:{href:"#_15-3-回到javascript的装饰者"}},[a._v("15.3 回到JavaScript的装饰者")])]),_("li",[_("a",{attrs:{href:"#_15-4-装饰函数"}},[a._v("15.4 装饰函数")])]),_("li",[_("a",{attrs:{href:"#_15-5-用aop装饰函数"}},[a._v("15.5 用AOP装饰函数")])]),_("li",[_("a",{attrs:{href:"#_15-6-aop的应用实例"}},[a._v("15.6 AOP的应用实例")])]),_("li",[_("a",{attrs:{href:"#_15-7-装饰者模式和代理模式"}},[a._v("15.7 装饰者模式和代理模式")])]),_("li",[_("a",{attrs:{href:"#_15-8-小结"}},[a._v("15.8 小结")])])])]),_("li",[_("a",{attrs:{href:"#第16章-状态模式"}},[a._v("第16章 状态模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_16-1-初识状态模式"}},[a._v("16.1 初识状态模式")])]),_("li",[_("a",{attrs:{href:"#_16-2-状态模式的定义"}},[a._v("16.2 状态模式的定义")])]),_("li",[_("a",{attrs:{href:"#_16-3-状态模式的通用结构"}},[a._v("16.3 状态模式的通用结构")])]),_("li",[_("a",{attrs:{href:"#_16-4-缺少抽象类的变通方式"}},[a._v("16.4 缺少抽象类的变通方式")])]),_("li",[_("a",{attrs:{href:"#_16-5-另一个状态模式示例-文件上传"}},[a._v("16.5 另一个状态模式示例——文件上传")])]),_("li",[_("a",{attrs:{href:"#_16-6-状态模式的优缺点"}},[a._v("16.6 状态模式的优缺点")])]),_("li",[_("a",{attrs:{href:"#_16-7-状态模式的性能优化点"}},[a._v("16.7 状态模式的性能优化点")])]),_("li",[_("a",{attrs:{href:"#_16-8-状态模式和策略模式的关系"}},[a._v("16.8 状态模式和策略模式的关系")])]),_("li",[_("a",{attrs:{href:"#_16-9-javascript版本的状态机"}},[a._v("16.9 JavaScript版本的状态机")])]),_("li",[_("a",{attrs:{href:"#_16-10-表驱动的有限状态机"}},[a._v("16.10 表驱动的有限状态机")])]),_("li",[_("a",{attrs:{href:"#_16-11-实际项目中的其他状态机"}},[a._v("16.11 实际项目中的其他状态机")])]),_("li",[_("a",{attrs:{href:"#_16-12-小结"}},[a._v("16.12 小结")])])])]),_("li",[_("a",{attrs:{href:"#第17章-适配器模式"}},[a._v("第17章 适配器模式")]),_("ul",[_("li",[_("a",{attrs:{href:"#_17-1-现实中的适配器"}},[a._v("17.1 现实中的适配器")])]),_("li",[_("a",{attrs:{href:"#_17-2-适配器模式的应用"}},[a._v("17.2 适配器模式的应用")])]),_("li",[_("a",{attrs:{href:"#_17-3-小结"}},[a._v("17.3 小结")])])])]),_("li",[_("a",{attrs:{href:"#第18章-单一职责原则"}},[a._v("第18章 单一职责原则")]),_("ul",[_("li",[_("a",{attrs:{href:"#_18-1-设计模式中的srp原则"}},[a._v("18.1 设计模式中的SRP原则")])]),_("li",[_("a",{attrs:{href:"#_18-2-何时应该分离职责"}},[a._v("18.2 何时应该分离职责")])]),_("li",[_("a",{attrs:{href:"#_18-3-违反srp原则"}},[a._v("18.3 违反SRP原则")])]),_("li",[_("a",{attrs:{href:"#_18-4-srp原则的优缺点"}},[a._v("18.4 SRP原则的优缺点")])])])]),_("li",[_("a",{attrs:{href:"#第19章-最少知识原则"}},[a._v("第19章 最少知识原则")]),_("ul",[_("li",[_("a",{attrs:{href:"#_19-1-减少对象之间的联系"}},[a._v("19.1 减少对象之间的联系")])]),_("li",[_("a",{attrs:{href:"#_19-2-设计模式中的最少知识原则"}},[a._v("19.2 设计模式中的最少知识原则")])]),_("li",[_("a",{attrs:{href:"#_19-3-封装在最少知识原则中的体现"}},[a._v("19.3 封装在最少知识原则中的体现")])])])]),_("li",[_("a",{attrs:{href:"#第20章-开放-封闭原则"}},[a._v("第20章 开放——封闭原则")]),_("ul",[_("li",[_("a",{attrs:{href:"#_20-1-扩展window-onload函数"}},[a._v("20.1 扩展window.onload函数")])]),_("li",[_("a",{attrs:{href:"#_20-2-开放和封闭"}},[a._v("20.2 开放和封闭")])]),_("li",[_("a",{attrs:{href:"#_20-3-用对象的多态性消除条件分支"}},[a._v("20.3 用对象的多态性消除条件分支")])]),_("li",[_("a",{attrs:{href:"#_20-4-找出变化的地方"}},[a._v("20.4 找出变化的地方")])]),_("li",[_("a",{attrs:{href:"#_20-5-设计模式中的开放-封闭原则"}},[a._v("20.5 设计模式中的开放——封闭原则")])]),_("li",[_("a",{attrs:{href:"#_20-6-开放-封闭原则的相对性"}},[a._v("20.6 开放——封闭原则的相对性")])]),_("li",[_("a",{attrs:{href:"#_20-7-接受第一次愚弄"}},[a._v("20.7 接受第一次愚弄")])])])]),_("li",[_("a",{attrs:{href:"#第21章-接口和面向接口编程"}},[a._v("第21章 接口和面向接口编程")]),_("ul",[_("li",[_("a",{attrs:{href:"#_21-1-回到java的抽象类"}},[a._v("21.1 回到Java的抽象类")])]),_("li",[_("a",{attrs:{href:"#_21-2-interface"}},[a._v("21.2 interface")])]),_("li",[_("a",{attrs:{href:"#_21-3-javascript语言是否需要抽象类和interface"}},[a._v("21.3 JavaScript语言是否需要抽象类和interface")])]),_("li",[_("a",{attrs:{href:"#_21-4-用鸭子类型进行接口检查"}},[a._v("21.4 用鸭子类型进行接口检查")])]),_("li",[_("a",{attrs:{href:"#_21-5-用typescript编写基于interface的命令模式"}},[a._v("21.5 用TypeScript编写基于interface的命令模式")])])])]),_("li",[_("a",{attrs:{href:"#第22章-代码重构"}},[a._v("第22章 代码重构")]),_("ul",[_("li",[_("a",{attrs:{href:"#_22-1-提炼函数"}},[a._v("22.1 提炼函数")])]),_("li",[_("a",{attrs:{href:"#_22-2-合并重复的条件片段"}},[a._v("22.2 合并重复的条件片段")])]),_("li",[_("a",{attrs:{href:"#_22-3-把条件分支语句提炼成函数"}},[a._v("22.3 把条件分支语句提炼成函数")])]),_("li",[_("a",{attrs:{href:"#_22-4-合理使用循环"}},[a._v("22.4 合理使用循环")])]),_("li",[_("a",{attrs:{href:"#_22-5-提前让函数退出代理嵌套条件分支"}},[a._v("22.5 提前让函数退出代理嵌套条件分支")])]),_("li",[_("a",{attrs:{href:"#_22-6-传递对象参数代替过长的参数列表"}},[a._v("22.6 传递对象参数代替过长的参数列表")])]),_("li",[_("a",{attrs:{href:"#_22-7-尽量减少参数数量"}},[a._v("22.7 尽量减少参数数量")])]),_("li",[_("a",{attrs:{href:"#_22-8-少用三目运算符"}},[a._v("22.8 少用三目运算符")])]),_("li",[_("a",{attrs:{href:"#_22-9-合理使用链式调用"}},[a._v("22.9 合理使用链式调用")])]),_("li",[_("a",{attrs:{href:"#_22-10-分解大型类"}},[a._v("22.10 分解大型类")])]),_("li",[_("a",{attrs:{href:"#_22-11-用return退出多重循环"}},[a._v("22.11 用return退出多重循环")])])])])])]),_("p"),a._v(" "),_("h2",{attrs:{id:"第1章-面向对象的javascript"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第1章-面向对象的javascript"}},[a._v("#")]),a._v(" 第1章 面向对象的JavaScript")]),a._v(" "),_("h3",{attrs:{id:"_1-1-动态类型语言和鸭子类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-动态类型语言和鸭子类型"}},[a._v("#")]),a._v(" 1.1 动态类型语言和鸭子类型")]),a._v(" "),_("h3",{attrs:{id:"_1-2-多态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-多态"}},[a._v("#")]),a._v(" 1.2 多态")]),a._v(" "),_("h3",{attrs:{id:"_1-3-封装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-封装"}},[a._v("#")]),a._v(" 1.3 封装")]),a._v(" "),_("h3",{attrs:{id:"_1-4-原型模式和基于原型的javascript对象系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-原型模式和基于原型的javascript对象系统"}},[a._v("#")]),a._v(" 1.4 原型模式和基于原型的JavaScript对象系统")]),a._v(" "),_("h2",{attrs:{id:"第2章-this、call和apply"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第2章-this、call和apply"}},[a._v("#")]),a._v(" 第2章 this、call和apply")]),a._v(" "),_("h3",{attrs:{id:"_2-1-this"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-this"}},[a._v("#")]),a._v(" 2.1 this")]),a._v(" "),_("h3",{attrs:{id:"_2-2-call和apply"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-call和apply"}},[a._v("#")]),a._v(" 2.2 call和apply")]),a._v(" "),_("h2",{attrs:{id:"第3章-闭包和高阶函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第3章-闭包和高阶函数"}},[a._v("#")]),a._v(" 第3章 闭包和高阶函数")]),a._v(" "),_("h3",{attrs:{id:"_3-1-闭包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-闭包"}},[a._v("#")]),a._v(" 3.1 闭包")]),a._v(" "),_("h3",{attrs:{id:"_3-2-高阶函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-高阶函数"}},[a._v("#")]),a._v(" 3.2 高阶函数")]),a._v(" "),_("h3",{attrs:{id:"_3-3-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-小结"}},[a._v("#")]),a._v(" 3.3 小结")]),a._v(" "),_("h2",{attrs:{id:"第4章-单例模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第4章-单例模式"}},[a._v("#")]),a._v(" 第4章 单例模式")]),a._v(" "),_("h3",{attrs:{id:"_4-1-实现单例模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-实现单例模式"}},[a._v("#")]),a._v(" 4.1 实现单例模式")]),a._v(" "),_("h3",{attrs:{id:"_4-2-透明的单例模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-透明的单例模式"}},[a._v("#")]),a._v(" 4.2 透明的单例模式")]),a._v(" "),_("h3",{attrs:{id:"_4-3-用代理实现单例模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-用代理实现单例模式"}},[a._v("#")]),a._v(" 4.3 用代理实现单例模式")]),a._v(" "),_("h3",{attrs:{id:"_4-4-javascript中的单例模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-javascript中的单例模式"}},[a._v("#")]),a._v(" 4.4 JavaScript中的单例模式")]),a._v(" "),_("h3",{attrs:{id:"_4-5-惰性单例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-惰性单例"}},[a._v("#")]),a._v(" 4.5 惰性单例")]),a._v(" "),_("h3",{attrs:{id:"_4-6-通用的惰性单例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-通用的惰性单例"}},[a._v("#")]),a._v(" 4.6 通用的惰性单例")]),a._v(" "),_("h3",{attrs:{id:"_4-7-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-小结"}},[a._v("#")]),a._v(" 4.7 小结")]),a._v(" "),_("h2",{attrs:{id:"第5章-策略模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第5章-策略模式"}},[a._v("#")]),a._v(" 第5章 策略模式")]),a._v(" "),_("h3",{attrs:{id:"_5-1-使用策略模式计算奖金"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-使用策略模式计算奖金"}},[a._v("#")]),a._v(" 5.1 使用策略模式计算奖金")]),a._v(" "),_("h3",{attrs:{id:"_5-2-javascript版本中的策略模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-javascript版本中的策略模式"}},[a._v("#")]),a._v(" 5.2 JavaScript版本中的策略模式")]),a._v(" "),_("h3",{attrs:{id:"_5-3-多态在策略模式中的体现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-多态在策略模式中的体现"}},[a._v("#")]),a._v(" 5.3 多态在策略模式中的体现")]),a._v(" "),_("h3",{attrs:{id:"_5-4-使用策略模式实现缓动动画"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-使用策略模式实现缓动动画"}},[a._v("#")]),a._v(" 5.4 使用策略模式实现缓动动画")]),a._v(" "),_("h3",{attrs:{id:"_5-5-更广义的-算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-更广义的-算法"}},[a._v("#")]),a._v(" 5.5 更广义的“算法”")]),a._v(" "),_("h3",{attrs:{id:"_5-6-表单校验"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-表单校验"}},[a._v("#")]),a._v(" 5.6 表单校验")]),a._v(" "),_("h3",{attrs:{id:"_5-7-策略模式的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-策略模式的优缺点"}},[a._v("#")]),a._v(" 5.7 策略模式的优缺点")]),a._v(" "),_("h3",{attrs:{id:"_5-8-一等函数对象与策略模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-一等函数对象与策略模式"}},[a._v("#")]),a._v(" 5.8 一等函数对象与策略模式")]),a._v(" "),_("h3",{attrs:{id:"_5-9-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-小结"}},[a._v("#")]),a._v(" 5.9 小结")]),a._v(" "),_("h2",{attrs:{id:"第6章-代理模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第6章-代理模式"}},[a._v("#")]),a._v(" 第6章 代理模式")]),a._v(" "),_("h3",{attrs:{id:"_6-1-第一个例子-小明追mm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-第一个例子-小明追mm"}},[a._v("#")]),a._v(" 6.1 第一个例子——小明追MM")]),a._v(" "),_("h3",{attrs:{id:"_6-2-保护代理和虚拟代理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-保护代理和虚拟代理"}},[a._v("#")]),a._v(" 6.2 保护代理和虚拟代理")]),a._v(" "),_("h3",{attrs:{id:"_6-3-虚拟代理实现图片预加载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-虚拟代理实现图片预加载"}},[a._v("#")]),a._v(" 6.3 虚拟代理实现图片预加载")]),a._v(" "),_("h3",{attrs:{id:"_6-4-代理的意义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-代理的意义"}},[a._v("#")]),a._v(" 6.4 代理的意义")]),a._v(" "),_("h3",{attrs:{id:"_6-5-代理和本体接口的一致性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-代理和本体接口的一致性"}},[a._v("#")]),a._v(" 6.5 代理和本体接口的一致性")]),a._v(" "),_("h3",{attrs:{id:"_6-6-虚拟代理合并http请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-虚拟代理合并http请求"}},[a._v("#")]),a._v(" 6.6 虚拟代理合并HTTP请求")]),a._v(" "),_("h3",{attrs:{id:"_6-7-虚拟代理在惰性加载中的应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-虚拟代理在惰性加载中的应用"}},[a._v("#")]),a._v(" 6.7 虚拟代理在惰性加载中的应用")]),a._v(" "),_("h3",{attrs:{id:"_6-8-缓存代理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-缓存代理"}},[a._v("#")]),a._v(" 6.8 缓存代理")]),a._v(" "),_("h3",{attrs:{id:"_6-9-用高阶函数动态创建代理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-用高阶函数动态创建代理"}},[a._v("#")]),a._v(" 6.9 用高阶函数动态创建代理")]),a._v(" "),_("h3",{attrs:{id:"_6-10-其他代理模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-10-其他代理模式"}},[a._v("#")]),a._v(" 6.10 其他代理模式")]),a._v(" "),_("h3",{attrs:{id:"_6-11-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-11-小结"}},[a._v("#")]),a._v(" 6.11 小结")]),a._v(" "),_("h2",{attrs:{id:"第7章-迭代器模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第7章-迭代器模式"}},[a._v("#")]),a._v(" 第7章 迭代器模式")]),a._v(" "),_("h3",{attrs:{id:"_7-1-jquery中的迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-jquery中的迭代器"}},[a._v("#")]),a._v(" 7.1 jQuery中的迭代器")]),a._v(" "),_("h3",{attrs:{id:"_7-2-实现自己的迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-实现自己的迭代器"}},[a._v("#")]),a._v(" 7.2 实现自己的迭代器")]),a._v(" "),_("h3",{attrs:{id:"_7-3-内部迭代器和外部迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-内部迭代器和外部迭代器"}},[a._v("#")]),a._v(" 7.3 内部迭代器和外部迭代器")]),a._v(" "),_("h3",{attrs:{id:"_7-4-迭代类数组对象和字面量对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-迭代类数组对象和字面量对象"}},[a._v("#")]),a._v(" 7.4 迭代类数组对象和字面量对象")]),a._v(" "),_("h3",{attrs:{id:"_7-5-倒序迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-5-倒序迭代器"}},[a._v("#")]),a._v(" 7.5 倒序迭代器")]),a._v(" "),_("h3",{attrs:{id:"_7-6-中止迭代器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-6-中止迭代器"}},[a._v("#")]),a._v(" 7.6 中止迭代器")]),a._v(" "),_("h3",{attrs:{id:"_7-7-迭代器模式的应用举例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-7-迭代器模式的应用举例"}},[a._v("#")]),a._v(" 7.7 迭代器模式的应用举例")]),a._v(" "),_("h3",{attrs:{id:"_7-8-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-8-小结"}},[a._v("#")]),a._v(" 7.8 小结")]),a._v(" "),_("h3",{attrs:{id:"_7-9-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-9-小结"}},[a._v("#")]),a._v(" 7.9 小结")]),a._v(" "),_("h2",{attrs:{id:"第8章-发布-订阅模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第8章-发布-订阅模式"}},[a._v("#")]),a._v(" 第8章 发布——订阅模式")]),a._v(" "),_("h3",{attrs:{id:"_8-1-现实中的发布-订阅模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-现实中的发布-订阅模式"}},[a._v("#")]),a._v(" 8.1 现实中的发布——订阅模式")]),a._v(" "),_("h3",{attrs:{id:"_8-2-发布-订阅模式的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-发布-订阅模式的作用"}},[a._v("#")]),a._v(" 8.2 发布——订阅模式的作用")]),a._v(" "),_("h3",{attrs:{id:"_8-3-dom事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-dom事件"}},[a._v("#")]),a._v(" 8.3 DOM事件")]),a._v(" "),_("h3",{attrs:{id:"_8-4-自定义事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-自定义事件"}},[a._v("#")]),a._v(" 8.4 自定义事件")]),a._v(" "),_("h3",{attrs:{id:"_8-5-发布-订阅模式的通知实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-发布-订阅模式的通知实现"}},[a._v("#")]),a._v(" 8.5 发布——订阅模式的通知实现")]),a._v(" "),_("h3",{attrs:{id:"_8-6-取消订阅的事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-取消订阅的事件"}},[a._v("#")]),a._v(" 8.6 取消订阅的事件")]),a._v(" "),_("h3",{attrs:{id:"_8-7-真实的例子-网站登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-真实的例子-网站登录"}},[a._v("#")]),a._v(" 8.7 真实的例子——网站登录")]),a._v(" "),_("h3",{attrs:{id:"_8-8-全局的发布-订阅对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-8-全局的发布-订阅对象"}},[a._v("#")]),a._v(" 8.8 全局的发布——订阅对象")]),a._v(" "),_("h3",{attrs:{id:"_8-9-模块间通信"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-9-模块间通信"}},[a._v("#")]),a._v(" 8.9 模块间通信")]),a._v(" "),_("h3",{attrs:{id:"_8-10-必须先订阅再发布吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-10-必须先订阅再发布吗"}},[a._v("#")]),a._v(" 8.10 必须先订阅再发布吗")]),a._v(" "),_("h3",{attrs:{id:"_8-11-全局事件的命名冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-11-全局事件的命名冲突"}},[a._v("#")]),a._v(" 8.11 全局事件的命名冲突")]),a._v(" "),_("h3",{attrs:{id:"_8-12-javascript实现发布-订阅"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-12-javascript实现发布-订阅"}},[a._v("#")]),a._v(" 8.12 JavaScript实现发布——订阅")]),a._v(" "),_("h3",{attrs:{id:"_8-13-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_8-13-小结"}},[a._v("#")]),a._v(" 8.13 小结")]),a._v(" "),_("h2",{attrs:{id:"第9章-命令模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第9章-命令模式"}},[a._v("#")]),a._v(" 第9章 命令模式")]),a._v(" "),_("h3",{attrs:{id:"_9-1-命令模式的用途"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-命令模式的用途"}},[a._v("#")]),a._v(" 9.1 命令模式的用途")]),a._v(" "),_("h3",{attrs:{id:"_9-2-命令模式的例子-菜单程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-命令模式的例子-菜单程序"}},[a._v("#")]),a._v(" 9.2 命令模式的例子——菜单程序")]),a._v(" "),_("h3",{attrs:{id:"_9-3-javascript中的命令模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-javascript中的命令模式"}},[a._v("#")]),a._v(" 9.3 JavaScript中的命令模式")]),a._v(" "),_("h3",{attrs:{id:"_9-4-撤销命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-撤销命令"}},[a._v("#")]),a._v(" 9.4 撤销命令")]),a._v(" "),_("h3",{attrs:{id:"_9-5-撤销和重做"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-撤销和重做"}},[a._v("#")]),a._v(" 9.5 撤销和重做")]),a._v(" "),_("h3",{attrs:{id:"_9-6-命令队列"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-命令队列"}},[a._v("#")]),a._v(" 9.6 命令队列")]),a._v(" "),_("h3",{attrs:{id:"_9-7-宏命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-宏命令"}},[a._v("#")]),a._v(" 9.7 宏命令")]),a._v(" "),_("h3",{attrs:{id:"_9-8-智能命令与傻瓜命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-8-智能命令与傻瓜命令"}},[a._v("#")]),a._v(" 9.8 智能命令与傻瓜命令")]),a._v(" "),_("h3",{attrs:{id:"_9-9-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_9-9-小结"}},[a._v("#")]),a._v(" 9.9 小结")]),a._v(" "),_("h2",{attrs:{id:"第10章-组合模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第10章-组合模式"}},[a._v("#")]),a._v(" 第10章 组合模式")]),a._v(" "),_("h3",{attrs:{id:"_10-1-回顾宏命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-回顾宏命令"}},[a._v("#")]),a._v(" 10.1 回顾宏命令")]),a._v(" "),_("h3",{attrs:{id:"_10-2-组合模式的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-组合模式的作用"}},[a._v("#")]),a._v(" 10.2 组合模式的作用")]),a._v(" "),_("h3",{attrs:{id:"_10-3-请求在树中传递的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-请求在树中传递的过程"}},[a._v("#")]),a._v(" 10.3 请求在树中传递的过程")]),a._v(" "),_("h3",{attrs:{id:"_10-4-更强大的宏命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-更强大的宏命令"}},[a._v("#")]),a._v(" 10.4 更强大的宏命令")]),a._v(" "),_("h3",{attrs:{id:"_10-5-抽象类在组合模式中的作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-5-抽象类在组合模式中的作用"}},[a._v("#")]),a._v(" 10.5 抽象类在组合模式中的作用")]),a._v(" "),_("h3",{attrs:{id:"_10-6-透明性带来的安全问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-6-透明性带来的安全问题"}},[a._v("#")]),a._v(" 10.6 透明性带来的安全问题")]),a._v(" "),_("h3",{attrs:{id:"_10-7-组合模式的例子-扫描文件夹"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-7-组合模式的例子-扫描文件夹"}},[a._v("#")]),a._v(" 10.7 组合模式的例子——扫描文件夹")]),a._v(" "),_("h3",{attrs:{id:"_10-8-一些值得注意的地方"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-8-一些值得注意的地方"}},[a._v("#")]),a._v(" 10.8 一些值得注意的地方")]),a._v(" "),_("h3",{attrs:{id:"_10-9-引用父对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-9-引用父对象"}},[a._v("#")]),a._v(" 10.9 引用父对象")]),a._v(" "),_("h3",{attrs:{id:"_10-10-何时使用组合模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-10-何时使用组合模式"}},[a._v("#")]),a._v(" 10.10 何时使用组合模式")]),a._v(" "),_("h3",{attrs:{id:"_10-11-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_10-11-小结"}},[a._v("#")]),a._v(" 10.11 小结")]),a._v(" "),_("h2",{attrs:{id:"第11章-模版方法模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第11章-模版方法模式"}},[a._v("#")]),a._v(" 第11章 模版方法模式")]),a._v(" "),_("h3",{attrs:{id:"_11-1-模版方法模式的定义和组成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-模版方法模式的定义和组成"}},[a._v("#")]),a._v(" 11.1 模版方法模式的定义和组成")]),a._v(" "),_("h3",{attrs:{id:"_11-2-第一个例子-coffe-or-tea"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-第一个例子-coffe-or-tea"}},[a._v("#")]),a._v(" 11.2 第一个例子——Coffe or Tea")]),a._v(" "),_("h3",{attrs:{id:"_11-3-抽象类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-抽象类"}},[a._v("#")]),a._v(" 11.3 抽象类")]),a._v(" "),_("h3",{attrs:{id:"_11-4-模版方法模式的使用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-4-模版方法模式的使用场景"}},[a._v("#")]),a._v(" 11.4 模版方法模式的使用场景")]),a._v(" "),_("h3",{attrs:{id:"_11-5-钩子方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-5-钩子方法"}},[a._v("#")]),a._v(" 11.5 钩子方法")]),a._v(" "),_("h3",{attrs:{id:"_11-6-好莱坞原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-6-好莱坞原则"}},[a._v("#")]),a._v(" 11.6 好莱坞原则")]),a._v(" "),_("h3",{attrs:{id:"_11-7-真的需要-继承-吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-7-真的需要-继承-吗"}},[a._v("#")]),a._v(" 11.7 真的需要“继承”吗")]),a._v(" "),_("h3",{attrs:{id:"_11-8-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_11-8-小结"}},[a._v("#")]),a._v(" 11.8 小结")]),a._v(" "),_("h2",{attrs:{id:"第12章-享元模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第12章-享元模式"}},[a._v("#")]),a._v(" 第12章 享元模式")]),a._v(" "),_("h3",{attrs:{id:"_12-1-初识享元模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-初识享元模式"}},[a._v("#")]),a._v(" 12.1 初识享元模式")]),a._v(" "),_("h3",{attrs:{id:"_12-2-内部状态和外部状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-内部状态和外部状态"}},[a._v("#")]),a._v(" 12.2 内部状态和外部状态")]),a._v(" "),_("h3",{attrs:{id:"_12-3-享元模式的通用结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-享元模式的通用结构"}},[a._v("#")]),a._v(" 12.3 享元模式的通用结构")]),a._v(" "),_("h3",{attrs:{id:"_12-4-文件上传的例子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-文件上传的例子"}},[a._v("#")]),a._v(" 12.4 文件上传的例子")]),a._v(" "),_("h3",{attrs:{id:"_12-5-享元模式的适用性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-享元模式的适用性"}},[a._v("#")]),a._v(" 12.5 享元模式的适用性")]),a._v(" "),_("h3",{attrs:{id:"_12-6-再谈内部状态和外部状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-再谈内部状态和外部状态"}},[a._v("#")]),a._v(" 12.6 再谈内部状态和外部状态")]),a._v(" "),_("h3",{attrs:{id:"_12-7-对象池"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-对象池"}},[a._v("#")]),a._v(" 12.7 对象池")]),a._v(" "),_("h3",{attrs:{id:"_12-8-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-小结"}},[a._v("#")]),a._v(" 12.8 小结")]),a._v(" "),_("h2",{attrs:{id:"第13章-职责链模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第13章-职责链模式"}},[a._v("#")]),a._v(" 第13章 职责链模式")]),a._v(" "),_("h3",{attrs:{id:"_13-1-现实中的职责链模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-现实中的职责链模式"}},[a._v("#")]),a._v(" 13.1 现实中的职责链模式")]),a._v(" "),_("h3",{attrs:{id:"_13-2-实际开发中的职责链模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-实际开发中的职责链模式"}},[a._v("#")]),a._v(" 13.2 实际开发中的职责链模式")]),a._v(" "),_("h3",{attrs:{id:"_13-3-用职责链模式重构代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-用职责链模式重构代码"}},[a._v("#")]),a._v(" 13.3 用职责链模式重构代码")]),a._v(" "),_("h3",{attrs:{id:"_13-4-灵活可拆分的职责链节点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-灵活可拆分的职责链节点"}},[a._v("#")]),a._v(" 13.4 灵活可拆分的职责链节点")]),a._v(" "),_("h3",{attrs:{id:"_13-5-异步的职责链"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-5-异步的职责链"}},[a._v("#")]),a._v(" 13.5 异步的职责链")]),a._v(" "),_("h3",{attrs:{id:"_13-6-职责链模式的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-6-职责链模式的优缺点"}},[a._v("#")]),a._v(" 13.6 职责链模式的优缺点")]),a._v(" "),_("h3",{attrs:{id:"_13-7-用aop实现职责链"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-7-用aop实现职责链"}},[a._v("#")]),a._v(" 13.7 用AOP实现职责链")]),a._v(" "),_("h3",{attrs:{id:"_13-8-用职责链模式获取文件上传对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-8-用职责链模式获取文件上传对象"}},[a._v("#")]),a._v(" 13.8 用职责链模式获取文件上传对象")]),a._v(" "),_("h3",{attrs:{id:"_13-9-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_13-9-小结"}},[a._v("#")]),a._v(" 13.9 小结")]),a._v(" "),_("h2",{attrs:{id:"第14章-中介者模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第14章-中介者模式"}},[a._v("#")]),a._v(" 第14章 中介者模式")]),a._v(" "),_("h3",{attrs:{id:"_14-1-现实中的中介者"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-现实中的中介者"}},[a._v("#")]),a._v(" 14.1 现实中的中介者")]),a._v(" "),_("h3",{attrs:{id:"_14-2-中介者模式的例子-泡泡堂游戏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-中介者模式的例子-泡泡堂游戏"}},[a._v("#")]),a._v(" 14.2 中介者模式的例子——泡泡堂游戏")]),a._v(" "),_("h3",{attrs:{id:"_14-3-中介者模式的例子-购买商品"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-中介者模式的例子-购买商品"}},[a._v("#")]),a._v(" 14.3 中介者模式的例子——购买商品")]),a._v(" "),_("h3",{attrs:{id:"_14-4-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_14-4-小结"}},[a._v("#")]),a._v(" 14.4 小结")]),a._v(" "),_("h2",{attrs:{id:"第15章-装饰者模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第15章-装饰者模式"}},[a._v("#")]),a._v(" 第15章 装饰者模式")]),a._v(" "),_("h3",{attrs:{id:"_15-1-传统模拟免息对象语言的装饰者模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-传统模拟免息对象语言的装饰者模式"}},[a._v("#")]),a._v(" 15.1 传统模拟免息对象语言的装饰者模式")]),a._v(" "),_("h3",{attrs:{id:"_15-2-装饰者也是包装器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-装饰者也是包装器"}},[a._v("#")]),a._v(" 15.2 装饰者也是包装器")]),a._v(" "),_("h3",{attrs:{id:"_15-3-回到javascript的装饰者"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-回到javascript的装饰者"}},[a._v("#")]),a._v(" 15.3 回到JavaScript的装饰者")]),a._v(" "),_("h3",{attrs:{id:"_15-4-装饰函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-装饰函数"}},[a._v("#")]),a._v(" 15.4 装饰函数")]),a._v(" "),_("h3",{attrs:{id:"_15-5-用aop装饰函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-用aop装饰函数"}},[a._v("#")]),a._v(" 15.5 用AOP装饰函数")]),a._v(" "),_("h3",{attrs:{id:"_15-6-aop的应用实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-6-aop的应用实例"}},[a._v("#")]),a._v(" 15.6 AOP的应用实例")]),a._v(" "),_("h3",{attrs:{id:"_15-7-装饰者模式和代理模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-7-装饰者模式和代理模式"}},[a._v("#")]),a._v(" 15.7 装饰者模式和代理模式")]),a._v(" "),_("h3",{attrs:{id:"_15-8-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_15-8-小结"}},[a._v("#")]),a._v(" 15.8 小结")]),a._v(" "),_("h2",{attrs:{id:"第16章-状态模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第16章-状态模式"}},[a._v("#")]),a._v(" 第16章 状态模式")]),a._v(" "),_("h3",{attrs:{id:"_16-1-初识状态模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-初识状态模式"}},[a._v("#")]),a._v(" 16.1 初识状态模式")]),a._v(" "),_("h3",{attrs:{id:"_16-2-状态模式的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-状态模式的定义"}},[a._v("#")]),a._v(" 16.2 状态模式的定义")]),a._v(" "),_("h3",{attrs:{id:"_16-3-状态模式的通用结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-状态模式的通用结构"}},[a._v("#")]),a._v(" 16.3 状态模式的通用结构")]),a._v(" "),_("h3",{attrs:{id:"_16-4-缺少抽象类的变通方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-4-缺少抽象类的变通方式"}},[a._v("#")]),a._v(" 16.4 缺少抽象类的变通方式")]),a._v(" "),_("h3",{attrs:{id:"_16-5-另一个状态模式示例-文件上传"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-5-另一个状态模式示例-文件上传"}},[a._v("#")]),a._v(" 16.5 另一个状态模式示例——文件上传")]),a._v(" "),_("h3",{attrs:{id:"_16-6-状态模式的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-6-状态模式的优缺点"}},[a._v("#")]),a._v(" 16.6 状态模式的优缺点")]),a._v(" "),_("h3",{attrs:{id:"_16-7-状态模式的性能优化点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-7-状态模式的性能优化点"}},[a._v("#")]),a._v(" 16.7 状态模式的性能优化点")]),a._v(" "),_("h3",{attrs:{id:"_16-8-状态模式和策略模式的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-8-状态模式和策略模式的关系"}},[a._v("#")]),a._v(" 16.8 状态模式和策略模式的关系")]),a._v(" "),_("h3",{attrs:{id:"_16-9-javascript版本的状态机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-9-javascript版本的状态机"}},[a._v("#")]),a._v(" 16.9 JavaScript版本的状态机")]),a._v(" "),_("h3",{attrs:{id:"_16-10-表驱动的有限状态机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-10-表驱动的有限状态机"}},[a._v("#")]),a._v(" 16.10 表驱动的有限状态机")]),a._v(" "),_("h3",{attrs:{id:"_16-11-实际项目中的其他状态机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-11-实际项目中的其他状态机"}},[a._v("#")]),a._v(" 16.11 实际项目中的其他状态机")]),a._v(" "),_("h3",{attrs:{id:"_16-12-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_16-12-小结"}},[a._v("#")]),a._v(" 16.12 小结")]),a._v(" "),_("h2",{attrs:{id:"第17章-适配器模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第17章-适配器模式"}},[a._v("#")]),a._v(" 第17章 适配器模式")]),a._v(" "),_("h3",{attrs:{id:"_17-1-现实中的适配器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-现实中的适配器"}},[a._v("#")]),a._v(" 17.1 现实中的适配器")]),a._v(" "),_("h3",{attrs:{id:"_17-2-适配器模式的应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-适配器模式的应用"}},[a._v("#")]),a._v(" 17.2 适配器模式的应用")]),a._v(" "),_("h3",{attrs:{id:"_17-3-小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-小结"}},[a._v("#")]),a._v(" 17.3 小结")]),a._v(" "),_("h2",{attrs:{id:"第18章-单一职责原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第18章-单一职责原则"}},[a._v("#")]),a._v(" 第18章 单一职责原则")]),a._v(" "),_("h3",{attrs:{id:"_18-1-设计模式中的srp原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-设计模式中的srp原则"}},[a._v("#")]),a._v(" 18.1 设计模式中的SRP原则")]),a._v(" "),_("h3",{attrs:{id:"_18-2-何时应该分离职责"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-何时应该分离职责"}},[a._v("#")]),a._v(" 18.2 何时应该分离职责")]),a._v(" "),_("h3",{attrs:{id:"_18-3-违反srp原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_18-3-违反srp原则"}},[a._v("#")]),a._v(" 18.3 违反SRP原则")]),a._v(" "),_("h3",{attrs:{id:"_18-4-srp原则的优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_18-4-srp原则的优缺点"}},[a._v("#")]),a._v(" 18.4 SRP原则的优缺点")]),a._v(" "),_("h2",{attrs:{id:"第19章-最少知识原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第19章-最少知识原则"}},[a._v("#")]),a._v(" 第19章 最少知识原则")]),a._v(" "),_("h3",{attrs:{id:"_19-1-减少对象之间的联系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_19-1-减少对象之间的联系"}},[a._v("#")]),a._v(" 19.1 减少对象之间的联系")]),a._v(" "),_("h3",{attrs:{id:"_19-2-设计模式中的最少知识原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_19-2-设计模式中的最少知识原则"}},[a._v("#")]),a._v(" 19.2 设计模式中的最少知识原则")]),a._v(" "),_("h3",{attrs:{id:"_19-3-封装在最少知识原则中的体现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_19-3-封装在最少知识原则中的体现"}},[a._v("#")]),a._v(" 19.3 封装在最少知识原则中的体现")]),a._v(" "),_("h2",{attrs:{id:"第20章-开放-封闭原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第20章-开放-封闭原则"}},[a._v("#")]),a._v(" 第20章 开放——封闭原则")]),a._v(" "),_("h3",{attrs:{id:"_20-1-扩展window-onload函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-扩展window-onload函数"}},[a._v("#")]),a._v(" 20.1 扩展window.onload函数")]),a._v(" "),_("h3",{attrs:{id:"_20-2-开放和封闭"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-开放和封闭"}},[a._v("#")]),a._v(" 20.2 开放和封闭")]),a._v(" "),_("h3",{attrs:{id:"_20-3-用对象的多态性消除条件分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-3-用对象的多态性消除条件分支"}},[a._v("#")]),a._v(" 20.3 用对象的多态性消除条件分支")]),a._v(" "),_("h3",{attrs:{id:"_20-4-找出变化的地方"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-4-找出变化的地方"}},[a._v("#")]),a._v(" 20.4 找出变化的地方")]),a._v(" "),_("h3",{attrs:{id:"_20-5-设计模式中的开放-封闭原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-5-设计模式中的开放-封闭原则"}},[a._v("#")]),a._v(" 20.5 设计模式中的开放——封闭原则")]),a._v(" "),_("h3",{attrs:{id:"_20-6-开放-封闭原则的相对性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-6-开放-封闭原则的相对性"}},[a._v("#")]),a._v(" 20.6 开放——封闭原则的相对性")]),a._v(" "),_("h3",{attrs:{id:"_20-7-接受第一次愚弄"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_20-7-接受第一次愚弄"}},[a._v("#")]),a._v(" 20.7 接受第一次愚弄")]),a._v(" "),_("h2",{attrs:{id:"第21章-接口和面向接口编程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第21章-接口和面向接口编程"}},[a._v("#")]),a._v(" 第21章 接口和面向接口编程")]),a._v(" "),_("h3",{attrs:{id:"_21-1-回到java的抽象类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_21-1-回到java的抽象类"}},[a._v("#")]),a._v(" 21.1 回到Java的抽象类")]),a._v(" "),_("h3",{attrs:{id:"_21-2-interface"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_21-2-interface"}},[a._v("#")]),a._v(" 21.2 interface")]),a._v(" "),_("h3",{attrs:{id:"_21-3-javascript语言是否需要抽象类和interface"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_21-3-javascript语言是否需要抽象类和interface"}},[a._v("#")]),a._v(" 21.3 JavaScript语言是否需要抽象类和interface")]),a._v(" "),_("h3",{attrs:{id:"_21-4-用鸭子类型进行接口检查"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_21-4-用鸭子类型进行接口检查"}},[a._v("#")]),a._v(" 21.4 用鸭子类型进行接口检查")]),a._v(" "),_("h3",{attrs:{id:"_21-5-用typescript编写基于interface的命令模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_21-5-用typescript编写基于interface的命令模式"}},[a._v("#")]),a._v(" 21.5 用TypeScript编写基于interface的命令模式")]),a._v(" "),_("h2",{attrs:{id:"第22章-代码重构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第22章-代码重构"}},[a._v("#")]),a._v(" 第22章 代码重构")]),a._v(" "),_("h3",{attrs:{id:"_22-1-提炼函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-提炼函数"}},[a._v("#")]),a._v(" 22.1 提炼函数")]),a._v(" "),_("h3",{attrs:{id:"_22-2-合并重复的条件片段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-2-合并重复的条件片段"}},[a._v("#")]),a._v(" 22.2 合并重复的条件片段")]),a._v(" "),_("h3",{attrs:{id:"_22-3-把条件分支语句提炼成函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-3-把条件分支语句提炼成函数"}},[a._v("#")]),a._v(" 22.3 把条件分支语句提炼成函数")]),a._v(" "),_("h3",{attrs:{id:"_22-4-合理使用循环"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-4-合理使用循环"}},[a._v("#")]),a._v(" 22.4 合理使用循环")]),a._v(" "),_("h3",{attrs:{id:"_22-5-提前让函数退出代理嵌套条件分支"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-5-提前让函数退出代理嵌套条件分支"}},[a._v("#")]),a._v(" 22.5 提前让函数退出代理嵌套条件分支")]),a._v(" "),_("h3",{attrs:{id:"_22-6-传递对象参数代替过长的参数列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-6-传递对象参数代替过长的参数列表"}},[a._v("#")]),a._v(" 22.6 传递对象参数代替过长的参数列表")]),a._v(" "),_("h3",{attrs:{id:"_22-7-尽量减少参数数量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-7-尽量减少参数数量"}},[a._v("#")]),a._v(" 22.7 尽量减少参数数量")]),a._v(" "),_("h3",{attrs:{id:"_22-8-少用三目运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-8-少用三目运算符"}},[a._v("#")]),a._v(" 22.8 少用三目运算符")]),a._v(" "),_("h3",{attrs:{id:"_22-9-合理使用链式调用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-9-合理使用链式调用"}},[a._v("#")]),a._v(" 22.9 合理使用链式调用")]),a._v(" "),_("h3",{attrs:{id:"_22-10-分解大型类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-10-分解大型类"}},[a._v("#")]),a._v(" 22.10 分解大型类")]),a._v(" "),_("h3",{attrs:{id:"_22-11-用return退出多重循环"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_22-11-用return退出多重循环"}},[a._v("#")]),a._v(" 22.11 用return退出多重循环")])])}),[],!1,null,null,null);t.default=s.exports}}]);